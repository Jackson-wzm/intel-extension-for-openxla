name: Public Jax CI
run-name: ${{ github.actor }} is testing out GitHub Action
on:
  workflow_dispatch:

jobs:
  openXLA-CI:
    runs-on: Intel_openxla
    if: |
      !(contains(github.repository, 'intel-innersource'))
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Prepare Conda Environment
        run: |
          set +e
          CONDA_ENV=jax_preCI_${{ github.event.pull_request.number }}_${{ runner.name }}
          source /opt/miniconda/bin/activate ${CONDA_ENV}
          if [ $? -ne 0 ]; then
              echo 'conda env does not exist'
              conda create -n ${CONDA_ENV} python=3.10 -y
              conda activate ${CONDA_ENV}
          fi
          conda install -c conda-forge gcc=12.1.0
          pip install numpy wheel build  
          #This CI is for public jax 
          git clone https://github.com/google/jax.git
          pip install -r jax/build/test-requirements.txt
      - name: Build openXLA
        run: |
          set +e
          CONDA_ENV=jax_preCI_${{ github.event.pull_request.number }}_${{ runner.name }}
          source /opt/miniconda/bin/activate ${CONDA_ENV}
          which bazel
          if [ $? -eq 1 ]; then
            wget https://github.com/bazelbuild/bazel/releases/download/5.3.0/bazel-5.3.0-installer-linux-x86_64.sh
            bash bazel-5.3.0-installer-linux-x86_64.sh --user
          fi
          #build jax 
          cd jax
          python build/build.py   #CPU
          build_result=${PIPESTATUS[0]}
          echo $build_result
          if [ "$build_result" = "0" ];then
              echo "Build successful"
              pip install tests/*.whl
          else
              echo "Build Failed"
              exit 1
          fi
      - name: UT testing
        run: |
          set +e
          CONDA_ENV=jax_preCI_${{ github.event.pull_request.number }}_${{ runner.name }}
          source /opt/miniconda/bin/activate ${CONDA_ENV}
          if [ -d "jax_test" ]; then
              echo "jax_test folder already exists. Doing nothing."
          else
              git clone -b jax https://github.com/wendyliu235/aipc_unify_validation_infr.git jax_test
          fi
          cd jax
          commit_hash=$(git rev-parse --short HEAD)
          mkdir -p ./logs/ut
          echo "$commit_hash" |& tee ./logs/ut/$commit_hash.txt
          find ./tests -name "*.py" | sed 's#\./##g' |& tee ut_list.txt
          file_path=./ut_list.txt
          
          # Check if the file exists
          if [ -f "$file_path" ]; then
              # Read each line using a while loop
              while IFS= read -r line; do
                  echo "Processing line: $line"
                  log_name=$(basename "$line" .py)
                  python $line |& tee ./logs/ut/$log_name.log
                  if [ ${PIPESTATUS[0]} -eq 0 ]; then
                    echo "$line" >> ./logs/ut/successful.log
                  else
                      echo "$line" >> ./logs/ut/err.log
                  fi
          else
              echo "File not found: $file_path"
              exit
          fi
      - name: Upload XLA CI Data
        uses: actions/upload-artifact@v3
        with:
          name: XLA-CI-Data
          path: /home/sdp/actions-runner/workspace_openxla/jax/jax_test/openxla/logs
      - name: Test Results Check
        run: |
          cd /home/sdp/actions-runner/workspace_openxla/jax/jax_test/openxla
          #UT results check
          if [ -f "./logs/ut/err.log" ]; then
            echo "exist fail cases"
            cat ./logs/ut/err.log
            exit 1 
          else
              echo "run successful"
          fi