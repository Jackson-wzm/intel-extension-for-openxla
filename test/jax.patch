commit 0af533c2c0aca319abd2e3104960e77b0118769b
Author: Wang, Quintin <quintin.wang@intel.com>
Date:   Wed Jan 31 23:14:57 2024 -0800

    Add sycl

diff --git a/.bazelrc b/.bazelrc
index a50178b3d..035401d45 100644
--- a/.bazelrc
+++ b/.bazelrc
@@ -118,6 +118,13 @@ build:rocm --define=xla_python_enable_gpu=true
 build:rocm --repo_env TF_NEED_ROCM=1
 build:rocm --action_env TF_ROCM_AMDGPU_TARGETS="gfx900,gfx906,gfx908,gfx90a,gfx1030"
 
+build:sycl --crosstool_top=@local_config_sycl//crosstool:toolchain
+build:sycl --define=using_sycl=true
+build:sycl --@xla//xla/python:enable_gpu=true
+build:sycl --define=xla_python_enable_gpu=true
+build:sycl --define=tensorflow_mkldnn_contraction_kernel=0
+build:sycl --repo_env TF_NEED_SYCL=1
+
 build:nonccl --define=no_nccl_support=true
 
 # Windows has a relatively short command line limit, which JAX has begun to hit.
diff --git a/build/build.py b/build/build.py
index dfdf33ec8..2aa21cd37 100755
--- a/build/build.py
+++ b/build/build.py
@@ -263,7 +263,7 @@ def write_bazelrc(*, python_bin_path, remote_build,
                   rocm_amdgpu_targets, bazel_options, target_cpu_features,
                   wheel_cpu, enable_mkl_dnn, use_clang, clang_path,
                   clang_major_version, enable_cuda, enable_nccl, enable_rocm,
-                  build_gpu_plugin):
+                  enable_sycl, build_gpu_plugin):
   tf_cuda_paths = []

   with open("../.jax_configure.bazelrc", "w") as f:
@@ -341,6 +341,10 @@ def write_bazelrc(*, python_bin_path, remote_build,
       f.write("build --config=rocm\n")
       if not enable_nccl:
         f.write("build --config=nonccl\n")
+    if enable_sycl:
+      f.write("build --config=sycl\n")
+      if not enable_nccl:
+        f.write("build --config=nonccl\n")
     if build_gpu_plugin:
       f.write("build --config=cuda_plugin\n")
 
@@ -479,6 +483,10 @@ def main():
       parser,
       "enable_rocm",
       help_str="Should we build with ROCm enabled?")
+  add_boolean_argument(
+      parser,
+      "enable_sycl",
+      help_str="Should we build with SYCL enabled?")
   add_boolean_argument(
       parser,
       "enable_nccl",
@@ -630,6 +638,8 @@ def main():
       print(f"ROCm toolkit path: {rocm_toolkit_path}")
     print(f"ROCm amdgpu targets: {args.rocm_amdgpu_targets}")
-
+  print("SYCL enabled: {}".format("yes" if args.enable_sycl else "no"))
   write_bazelrc(
       python_bin_path=python_bin_path,
       remote_build=args.remote_build,
@@ -651,6 +661,7 @@ def main():
       enable_cuda=args.enable_cuda,
       enable_nccl=args.enable_nccl,
       enable_rocm=args.enable_rocm,
+      enable_sycl=args.enable_sycl,
       build_gpu_plugin=args.build_gpu_plugin,
   )
 
diff --git a/jax/__init__.py b/jax/__init__.py
index ece7c7611..945197f6d 100644
--- a/jax/__init__.py
+++ b/jax/__init__.py
@@ -14,7 +14,7 @@
 
 # Set default C++ logging level before any logging happens.
 import os as _os
-_os.environ.setdefault('TF_CPP_MIN_LOG_LEVEL', '1')
+# _os.environ.setdefault('TF_CPP_MIN_LOG_LEVEL', '1')
 del _os
 
 # Import version first, because other submodules may reference it.
diff --git a/jax/_src/xla_bridge.py b/jax/_src/xla_bridge.py
index 945b7d030..f892b97e6 100644
--- a/jax/_src/xla_bridge.py
+++ b/jax/_src/xla_bridge.py
@@ -84,6 +84,10 @@ _ROCM_VISIBLE_DEVICES = config.DEFINE_string(
     'jax_rocm_visible_devices', 'all',
     'Restricts the set of ROCM devices that JAX will use. Either "all", or a '
     'comma-separate list of integer device IDs.')
+_SYCL_VISIBLE_DEVICES = config.DEFINE_string(
+    'jax_sycl_visible_devices', 'all',
+    'Restricts the set of SYCL devices that JAX will use. Either "all", or a '
+    'comma-separate list of integer device IDs.')
 
 _USE_MOCK_GPU_CLIENT = config.DEFINE_bool(
     name="use_mock_gpu_client",
@@ -347,6 +351,16 @@ if hasattr(xla_client, "make_gpu_client"):
       priority=200,
       fail_quietly=True,
   )
+  register_backend_factory(
+      "sycl",
+      partial(
+          make_gpu_client,
+          platform_name="sycl",
+          visible_devices_flag=_SYCL_VISIBLE_DEVICES,
+      ),
+      priority=200,
+      fail_quietly=True,
+  )
 
 
 if hasattr(xla_client, "make_tpu_client"):
@@ -580,6 +594,7 @@ def register_pjrt_plugin_factories_from_env() -> None:
 _platform_aliases = {
   "cuda": "gpu",
   "rocm": "gpu",
+  "sycl": "gpu",
 }
 
 _alias_to_platforms: dict[str, list[str]] = {}
