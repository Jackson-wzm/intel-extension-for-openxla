load("//xla:xla.bzl", "xetla_library", "xpu_library")

package(
    default_visibility = [
        "//visibility:public",
    ],
    licenses = ["notice"],
)

cc_library(
    name = "gpu_transfer_manager",
    srcs = ["gpu_transfer_manager.cc"],
    hdrs = ["gpu_transfer_manager.h"],
    deps = [
        "//xla/stream_executor/sycl:sycl_platform_id",
        "@com_google_absl//absl/cleanup",
        "@llvm-project//llvm:Core",
        "@tsl//tsl/platform:errors",
        "@tsl//tsl/platform:logging",
        "@xla//xla:literal",
        "@xla//xla:literal_util",
        "@xla//xla:shape_tree",
        "@xla//xla:shape_util",
        "@xla//xla:status_macros",
        "@xla//xla:statusor",
        "@xla//xla:types",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/service:compiler",
        "@xla//xla/service:generic_transfer_manager",
        "@xla//xla/service:transfer_manager",
        "@xla//xla/service/gpu:io_feed_manager",
        "@xla//xla/service/gpu:target_constants",
        "@xla//xla/stream_executor",
        "@xla//xla/stream_executor:stream_executor_headers",
        "@xla//xla/stream_executor/host:host_platform_id",
    ],
    alwayslink = True,  # Contains per-platform transfer manager registration
)

cc_library(
    name = "gpu_computation_placer",
    srcs = ["gpu_computation_placer.cc"],
    deps = [
        "//xla/stream_executor/sycl:sycl_platform_id",
        "@xla//xla/service:computation_placer",
    ],
    alwayslink = True,  # Contains per-platform transfer manager registration
)

cc_library(
    name = "spir_compiler_impl",
    srcs = [
        "spir_compiler.cc",
    ],
    hdrs = [
        "spir_compiler.h",
    ],
    deps = [
        ":fused_mha_rewriter",
        ":gpu_compiler",
        ":mkl_rewriter",
        ":onednn_fused_conv_rewriter",
        ":triangular_solve_rewriter",
        "//xla/service/gpu/llvm_gpu_backend",
        "//xla/stream_executor/sycl:sycl_platform_id",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/container:node_hash_map",
        "@com_google_absl//absl/types:optional",
        "@llvm-project//llvm:IRReader",
        "@llvm-project//llvm:Support",
        "@xla//xla/service/gpu:gpu_conv_padding_legalization",
        "@xla//xla/service/gpu:target_constants",
    ],
)

cc_library(
    name = "spir_compiler",
    srcs = [
        "spir_compiler_registration.cc",
    ],
    deps = [
        ":spir_compiler_impl",
        "//xla/stream_executor/sycl:sycl_platform_id",
        "@tsl//tsl/platform:path",
    ],
    alwayslink = True,  # Contains compiler registration
)

cc_library(
    name = "mkl_rewriter",
    srcs = ["mkl_rewriter.cc"],
    hdrs = ["mkl_rewriter.h"],
    deps = [
        ":mkl",
        "@com_google_absl//absl/algorithm:container",
        "@tsl//tsl/platform:logging",
        "@tsl//tsl/platform:status",
        "@xla//xla:literal",
        "@xla//xla:literal_util",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service:hlo_pass",
        "@xla//xla/service/gpu:ir_emission_utils",
        "@xla//xla/stream_executor",
        "@xla//xla/stream_executor:blas",
        "@xla//xla/stream_executor:device_memory_allocator",
    ],
)

cc_library(
    name = "onednn_fused_conv_rewriter",
    srcs = ["onednn_fused_conv_rewriter.cc"],
    hdrs = ["onednn_fused_conv_rewriter.h"],
    deps = [
        "@tsl//tsl/platform:errors",
        "@tsl//tsl/platform:statusor",
        "@xla//xla:comparison_util",
        "@xla//xla:literal_util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service:hlo_creation_utils",
        "@xla//xla/service:hlo_pass",
        "@xla//xla/service:pattern_matcher",
        "@xla//xla/service/gpu:backend_configs_cc",
        "@xla//xla/service/gpu:cublas_cudnn",
        "@xla//xla/stream_executor",
        "@xla//xla/stream_executor:dnn_proto_cc",
    ],
)

cc_library(
    name = "triangular_solve_rewriter",
    srcs = ["triangular_solve_rewriter.cc"],
    hdrs = ["triangular_solve_rewriter.h"],
    deps = [
        "@com_google_absl//absl/strings",
        "@xla//xla:statusor",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service:hlo_creation_utils",
        "@xla//xla/service:hlo_pass",
        "@xla//xla/service/gpu:cublas_cudnn",
    ],
)

cc_library(
    name = "cholesky_thunk",
    srcs = ["cholesky_thunk.cc"],
    hdrs = ["cholesky_thunk.h"],
    deps = [
        ":mkl",
        "//xla/stream_executor/sycl:sycl_executor",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:optional",
        "@tsl//tsl/platform:logging",
        "@tsl//tsl/platform:status",
        "@xla//xla:types",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service:buffer_assignment",
        "@xla//xla/service/gpu:buffer_allocations",
        "@xla//xla/service/gpu:precompiled_kernels",
        "@xla//xla/service/gpu:thunk",
        "@xla//xla/stream_executor",
        "@xla//xla/stream_executor:device_memory",
        "@xla//xla/stream_executor:stream_executor_headers",
        "@xla//xla/stream_executor/gpu:gpu_asm_opts",
    ],
)

cc_library(
    name = "triangular_solve_thunk",
    srcs = ["triangular_solve_thunk.cc"],
    hdrs = ["triangular_solve_thunk.h"],
    deps = [
        ":mkl",
        "//xla/stream_executor/sycl:sycl_executor",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:optional",
        "@tsl//tsl/platform:logging",
        "@tsl//tsl/platform:status",
        "@xla//xla:types",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service:buffer_assignment",
        "@xla//xla/service/gpu:buffer_allocations",
        "@xla//xla/service/gpu:precompiled_kernels",
        "@xla//xla/service/gpu:thunk",
        "@xla//xla/stream_executor",
        "@xla//xla/stream_executor:device_memory",
        "@xla//xla/stream_executor:stream_executor_headers",
        "@xla//xla/stream_executor/gpu:gpu_asm_opts",
    ],
)

cc_library(
    name = "gpu_compiler",
    srcs = [
        "gpu_compiler.cc",
    ],
    hdrs = [
        "gpu_compiler.h",
    ],
    deps = [
        ":dot_expand_dims",
        ":gemm_rewriter",
        ":gpu_executable",
        ":ir_emitter",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:variant",
        "@llvm-project//llvm:AsmParser",
        "@llvm-project//llvm:Core",
        "@llvm-project//llvm:Support",
        "@llvm-project//llvm:TransformUtils",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:Pass",
        "@llvm-project//mlir:Support",
        "@tsl//tsl/platform:blocking_counter",
        "@tsl//tsl/platform:casts",
        "@tsl//tsl/platform:env",
        "@tsl//tsl/platform:errors",
        "@tsl//tsl/platform:logging",
        "@tsl//tsl/platform:path",
        "@tsl//tsl/platform:status",
        "@tsl//tsl/platform:statusor",
        "@tsl//tsl/profiler/lib:traceme",
        "@xla//xla:autotune_results_proto_cc",
        "@xla//xla:status_macros",
        "@xla//xla:statusor",
        "@xla//xla:types",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/hlo/transforms:hlo_constant_splitter",
        "@xla//xla/mlir/runtime/transforms:compilation_pipeline_gpu",
        "@xla//xla/mlir_hlo:transforms_gpu_passes",
        "@xla//xla/service:algebraic_simplifier",
        "@xla//xla/service:all_gather_broadcast_reorder",
        "@xla//xla/service:all_gather_combiner",
        "@xla//xla/service:all_reduce_combiner",
        "@xla//xla/service:all_reduce_contiguous",
        "@xla//xla/service:all_reduce_folder",
        "@xla//xla/service:all_reduce_promotion",
        "@xla//xla/service:all_reduce_reassociate",
        "@xla//xla/service:all_to_all_decomposer",
        "@xla//xla/service:async_collective_creator",
        "@xla//xla/service:batchnorm_expander",
        "@xla//xla/service:bitcast_dtypes_expander",
        "@xla//xla/service:broadcast_canonicalizer",
        "@xla//xla/service:buffer_assignment",
        "@xla//xla/service:call_inliner",
        "@xla//xla/service:collectives_schedule_linearizer",
        "@xla//xla/service:comparison_expander",
        "@xla//xla/service:conditional_canonicalizer",
        "@xla//xla/service:conditional_simplifier",
        "@xla//xla/service:convert_async_collectives_to_sync",
        "@xla//xla/service:convert_mover",
        "@xla//xla/service:convolution_4d_expander",
        "@xla//xla/service:convolution_pred_expander",
        "@xla//xla/service:copy_insertion",
        "@xla//xla/service:dot_decomposer",
        "@xla//xla/service:dot_merger",
        "@xla//xla/service:dump",
        "@xla//xla/service:dynamic_dimension_simplifier",
        "@xla//xla/service:dynamic_index_splitter",
        "@xla//xla/service:dynamic_padder",
        "@xla//xla/service:eigh_expander",
        "@xla//xla/service:executable",
        "@xla//xla/service:flatten_call_graph",
        "@xla//xla/service:float_normalization",
        "@xla//xla/service:gather_expander",
        "@xla//xla/service:gather_simplifier",
        "@xla//xla/service:hlo_computation_deduplicator",
        "@xla//xla/service:hlo_constant_folding",
        "@xla//xla/service:hlo_cse",
        "@xla//xla/service:hlo_dataflow_analysis",
        "@xla//xla/service:hlo_dce",
        "@xla//xla/service:hlo_pass",
        "@xla//xla/service:hlo_pass_pipeline",
        "@xla//xla/service:hlo_proto_cc",
        "@xla//xla/service:hlo_rematerialization",
        "@xla//xla/service:hlo_verifier",
        "@xla//xla/service:layout_normalization",
        "@xla//xla/service:llvm_compiler",
        "@xla//xla/service:logistic_expander",
        "@xla//xla/service:loop_schedule_linearizer",
        "@xla//xla/service:operand_upcaster",
        "@xla//xla/service:optimization_barrier_expander",
        "@xla//xla/service:qr_expander",
        "@xla//xla/service:real_imag_expander",
        "@xla//xla/service:reduce_decomposer",
        "@xla//xla/service:reduce_scatter_combiner",
        "@xla//xla/service:reduce_scatter_reassociate",
        "@xla//xla/service:reshape_decomposer",
        "@xla//xla/service:reshape_mover",
        "@xla//xla/service:result_caster",
        "@xla//xla/service:rng_bit_generator_expander",
        "@xla//xla/service:rng_expander",
        "@xla//xla/service:scatter_simplifier",
        "@xla//xla/service:sharding_propagation",
        "@xla//xla/service:sharding_remover",
        "@xla//xla/service:simplify_fp_conversions",
        "@xla//xla/service:slice_sinker",
        "@xla//xla/service:slow_operation_alarm",
        "@xla//xla/service:sort_simplifier",
        "@xla//xla/service:stable_sort_expander",
        "@xla//xla/service:stochastic_convert_decomposer",
        "@xla//xla/service:topk_rewriter",
        "@xla//xla/service:transpose_folding",
        "@xla//xla/service:tuple_simplifier",
        "@xla//xla/service:while_loop_all_reduce_code_motion",
        "@xla//xla/service:while_loop_constant_sinking",
        "@xla//xla/service:while_loop_simplifier",
        "@xla//xla/service:while_loop_trip_count_annotator",
        "@xla//xla/service:zero_sized_hlo_elimination",
        "@xla//xla/service/gpu:alias_passthrough_params",
        "@xla//xla/service/gpu:all_reduce_blueconnect",
        "@xla//xla/service/gpu:conv_layout_normalization",
        "@xla//xla/service/gpu:dot_dimension_sorter",
        "@xla//xla/service/gpu:executable_proto_cc",
        "@xla//xla/service/gpu:fusion_merger",
        "@xla//xla/service/gpu:gemm_broadcast_folding_rewriter",
        "@xla//xla/service/gpu:gemm_rewriter_triton",
        "@xla//xla/service/gpu:gpu_constants",
        "@xla//xla/service/gpu:gpu_conv_rewriter",
        "@xla//xla/service/gpu:gpu_device_info",
        "@xla//xla/service/gpu:gpu_hlo_cost_analysis",
        "@xla//xla/service/gpu:gpu_hlo_schedule",
        "@xla//xla/service/gpu:gpu_layout_assignment",
        "@xla//xla/service/gpu:gpu_reduce_scatter_creator",
        "@xla//xla/service/gpu:gpu_sanitize_constant_names",
        "@xla//xla/service/gpu:gpu_scatter_expander",
        "@xla//xla/service/gpu:gpu_serializable_autotuner",
        "@xla//xla/service/gpu:gpu_shape_verifier",
        "@xla//xla/service/gpu:hlo_fusion_stats",
        "@xla//xla/service/gpu:horizontal_input_fusion",
        "@xla//xla/service/gpu:horizontal_loop_fusion",
        "@xla//xla/service/gpu:instruction_fusion",
        "@xla//xla/service/gpu:ir_emission_utils",
        "@xla//xla/service/gpu:matmul_utils",
        "@xla//xla/service/gpu:metrics",
        "@xla//xla/service/gpu:move_copy_to_users",
        "@xla//xla/service/gpu:multi_output_fusion",
        "@xla//xla/service/gpu:reduction_degenerate_dim_remover",
        "@xla//xla/service/gpu:reduction_dimension_grouper",
        "@xla//xla/service/gpu:reduction_layout_normalizer",
        "@xla//xla/service/gpu:reduction_splitter",
        "@xla//xla/service/gpu:runtime_intrinsics",
        "@xla//xla/service/gpu:scatter_slice_simplifier",
        "@xla//xla/service/gpu:tree_reduction_rewriter",
        "@xla//xla/service/gpu:variadic_op_splitter",
        "@xla//xla/service/llvm_ir:llvm_util",
        "@xla//xla/service/spmd:collective_permute_motion",
        "@xla//xla/service/spmd:stateful_rng_spmd_partitioner",
        "@xla//xla/stream_executor",
        "@xla//xla/stream_executor:device_description_proto_cc_impl",
        "@xla//xla/stream_executor:stream_executor_headers",
        "@xla//xla/stream_executor/cuda:cuda_platform_id",
        "@xla//xla/stream_executor/rocm:rocm_platform_id",
        "@xla//xla/translate/hlo_to_mhlo:hlo_utils",
        "@xla//xla/translate/mhlo_to_hlo:location_exporter",
        "@xla//xla/translate/mhlo_to_lhlo_with_xla",
    ],
)

cc_library(
    name = "ir_emitter",
    srcs = [
        "ir_emitter.cc",
        "ir_emitter_context.cc",
        "ir_emitter_nested.cc",
        "ir_emitter_unnested.cc",
    ],
    hdrs = [
        "ir_emitter.h",
        "ir_emitter_context.h",
        "ir_emitter_nested.h",
        "ir_emitter_unnested.h",
        "kernel_mapping_scheme.h",
    ],
    deps = [
        ":ccl_collective_thunks",
        ":cholesky_thunk",
        ":fft_thunk",
        ":gpu_conv_runner",
        ":gpu_executable",
        ":gpu_fused_mha_runner",
        ":triangular_solve_thunk",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/container:inlined_vector",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:span",
        "@llvm-project//llvm:Core",
        "@llvm-project//llvm:Linker",
        "@llvm-project//llvm:Support",
        "@llvm-project//mlir:ArithDialect",
        "@llvm-project//mlir:BuiltinToLLVMIRTranslation",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:GPUDialect",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:LLVMDialect",
        "@llvm-project//mlir:LLVMToLLVMIRTranslation",
        "@llvm-project//mlir:MemRefDialect",
        "@llvm-project//mlir:NVVMToLLVMIRTranslation",
        "@llvm-project//mlir:ROCDLToLLVMIRTranslation",
        "@llvm-project//mlir:Support",
        "@llvm-project//mlir:ToLLVMIRTranslation",
        "@tsl//tsl/platform:errors",
        "@tsl//tsl/platform:human_readable_json",
        "@tsl//tsl/platform:logging",
        "@tsl//tsl/platform:status",
        "@tsl//tsl/platform:statusor",
        "@tsl//tsl/protobuf:autotuning_proto_cc",
        "@tsl//tsl/protobuf:dnn_proto_cc",
        "@xla//xla:literal",
        "@xla//xla:permutation_util",
        "@xla//xla:shape_util",
        "@xla//xla:status_macros",
        "@xla//xla:statusor",
        "@xla//xla:types",
        "@xla//xla:union_find",
        "@xla//xla:util",
        "@xla//xla:window_util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/mlir_hlo",
        "@xla//xla/mlir_hlo:lhlo",
        "@xla//xla/mlir_hlo:lhlo_gpu",
        "@xla//xla/mlir_hlo:transforms_gpu_passes",
        "@xla//xla/service:buffer_assignment",
        "@xla//xla/service:collective_ops_utils",
        "@xla//xla/service:custom_call_status",
        "@xla//xla/service:custom_call_target_registry",
        "@xla//xla/service:elemental_ir_emitter",
        "@xla//xla/service:hlo_execution_profile",
        "@xla//xla/service:name_uniquer",
        "@xla//xla/service:pattern_matcher",
        "@xla//xla/service:shape_inference",
        "@xla//xla/service:while_loop_analysis",
        "@xla//xla/service/gpu:backend_configs_cc",
        "@xla//xla/service/gpu:buffer_allocations",
        "@xla//xla/service/gpu:elemental_ir_emitter",
        "@xla//xla/service/gpu:gpu_asm_opts_util",
        "@xla//xla/service/gpu:gpu_constants",
        "@xla//xla/service/gpu:gpu_device_info",
        "@xla//xla/service/gpu:gpu_fusible",
        "@xla//xla/service/gpu:hlo_to_ir_bindings",
        "@xla//xla/service/gpu:ir_emission_utils",
        "@xla//xla/service/gpu:launch_dimensions",
        "@xla//xla/service/gpu:matmul_utils",
        "@xla//xla/service/gpu:parallel_loop_emitter",
        "@xla//xla/service/gpu:target_util",
        "@xla//xla/service/gpu:thunk",
        "@xla//xla/service/llvm_ir:buffer_assignment_util",
        "@xla//xla/service/llvm_ir:dynamic_update_slice_util",
        "@xla//xla/service/llvm_ir:fused_ir_emitter",
        "@xla//xla/service/llvm_ir:ir_array",
        "@xla//xla/service/llvm_ir:ir_builder_mixin",
        "@xla//xla/service/llvm_ir:kernel_support_library",
        "@xla//xla/service/llvm_ir:llvm_loop",
        "@xla//xla/service/llvm_ir:llvm_type_conversion_util",
        "@xla//xla/service/llvm_ir:llvm_util",
        "@xla//xla/service/llvm_ir:loop_emitter",
        "@xla//xla/service/llvm_ir:sort_util",
        "@xla//xla/service/llvm_ir:tuple_ops",
        "@xla//xla/translate/hlo_to_mhlo:hlo_module_importer",
        "@xla//xla/translate/hlo_to_mhlo:hlo_utils",
        "@xla//xla/translate/mhlo_to_hlo:attribute_exporter",
        "@xla//xla/translate/mhlo_to_hlo:location_exporter",
        "@xla//xla/translate/mhlo_to_hlo:mlir_hlo_to_hlo",
        "@xla//xla/translate/mhlo_to_hlo:type_to_shape",
        "@xla//xla/translate/mhlo_to_lhlo_with_xla",
    ],
)

cc_library(
    name = "custom_call_thunk",
    srcs = ["custom_call_thunk.cc"],
    hdrs = ["custom_call_thunk.h"],
    deps = [
        "@com_google_absl//absl/strings:str_format",
        "@tsl//tsl/platform:errors",
        "@xla//xla:util",
        "@xla//xla/service:buffer_assignment",
        "@xla//xla/service:custom_call_status_internal",
        "@xla//xla/service/gpu:buffer_allocations",
        "@xla//xla/service/gpu:thunk",
        "@xla//xla/stream_executor/gpu:gpu_stream_header",
        "@xla//xla/stream_executor/gpu:gpu_types_header",
    ],
)

cc_library(
    name = "fft_thunk",
    srcs = ["fft_thunk.cc"],
    hdrs = ["fft_thunk.h"],
    deps = [
        ":scratch_allocator",
        "//xla/stream_executor/sycl:sycl_executor",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@tsl//tsl/platform:logging",
        "@tsl//tsl/platform:status",
        "@xla//xla:types",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service:buffer_assignment",
        "@xla//xla/service/gpu:buffer_allocations",
        "@xla//xla/service/gpu:thunk",
        "@xla//xla/stream_executor",
        "@xla//xla/stream_executor:stream_executor_headers",
    ],
)

cc_library(
    name = "gemm_thunk",
    srcs = ["gemm_thunk.cc"],
    hdrs = ["gemm_thunk.h"],
    deps = [
        ":onednn_matmul_utils",
        ":scratch_allocator",
        "@tsl//tsl/platform:logging",
        "@xla//xla:status",
        "@xla//xla/service:buffer_assignment",
        "@xla//xla/service/gpu:matmul_utils",
        "@xla//xla/service/gpu:thunk",
        "@xla//xla/stream_executor:device_memory",
        "@xla//xla/stream_executor:stream_executor_headers",
    ],
)

cc_library(
    name = "onednn_matmul_utils",
    srcs = ["onednn_matmul_utils.cc"],
    hdrs = ["onednn_matmul_utils.h"],
    deps = [
        ":scratch_allocator",
        "//xla/service:onednn_util",
        "//xla/service/gpu/xetla/gemm:gemm_kernel",
        "//xla/stream_executor/sycl:sycl_executor",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/types:span",
        "@tsl//tsl/framework:numeric_types",
        "@tsl//tsl/platform:statusor",
        "@xla//xla:shape_util",
        "@xla//xla:status_macros",
        "@xla//xla:statusor",
        "@xla//xla:types",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/mlir_hlo",
        "@xla//xla/mlir_hlo:lhlo_gpu",
        "@xla//xla/service/gpu:backend_configs_cc",
        "@xla//xla/service/gpu:ir_emission_utils",
        "@xla//xla/service/gpu:matmul_utils",
        "@xla//xla/stream_executor:stream_executor_headers",
    ],
)

xpu_library(
    name = "ccl_utils",
    srcs = ["ccl_utils.cc"],
    hdrs = ["ccl_utils.h"],
    deps = [
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
        "@tsl//tsl/platform:env",
        "@tsl//tsl/platform:logging",
        "@xla//xla:debug_options_flags",
        "@xla//xla:status",
        "@xla//xla:status_macros",
        "@xla//xla:statusor",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/service:collective_ops_utils",
        "@xla//xla/service:global_device_id",
        "@xla//xla/service:rendezvous",
        "@xla//xla/service/gpu:gpu_executable_run_options",
        "@xla//xla/service/gpu:thunk",
    ],
)

xpu_library(
    name = "ccl_collective_thunks",
    srcs = [
        "ccl_all_gather_thunk.cc",
        "ccl_all_reduce_thunk.cc",
        "ccl_all_to_all_thunk.cc",
        "ccl_collective_permute_thunk.cc",
        "ccl_collective_thunk.cc",
        "ccl_ops.cc",
    ],
    hdrs = [
        "ccl_all_gather_thunk.h",
        "ccl_all_reduce_thunk.h",
        "ccl_all_to_all_thunk.h",
        "ccl_collective_permute_thunk.h",
        "ccl_collective_thunk.h",
        "ccl_ops.h",
    ],
    deps = [
        ":ccl_utils",
        "//xla/stream_executor/sycl:sycl_executor",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/functional:function_ref",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/synchronization",
        "@llvm-project//mlir:IR",
        "@tsl//tsl/platform:logging",
        "@xla//xla:shape_util",
        "@xla//xla:status",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/mlir_hlo:lhlo",
        "@xla//xla/mlir_hlo:lhlo_gpu",
        "@xla//xla/service:buffer_assignment",
        "@xla//xla/service:collective_ops_utils",
        "@xla//xla/service:global_device_id",
        "@xla//xla/service/gpu:buffer_allocations",
        "@xla//xla/service/gpu:ir_emission_utils",
        "@xla//xla/service/gpu:thunk",
        "@xla//xla/stream_executor",
        "@xla//xla/stream_executor/gpu:gpu_activation",
        "@xla//xla/stream_executor/gpu:gpu_activation_header",
        "@xla//xla/stream_executor/gpu:gpu_stream",
        "@xla//xla/stream_executor/gpu:gpu_types_header",
        "@xla//xla/translate/hlo_to_mhlo:hlo_utils",
        "@xla//xla/translate/mhlo_to_hlo:attribute_exporter",
        "@xla//xla/translate/mhlo_to_hlo:type_to_shape",
    ],
)

xpu_library(
    name = "gpu_executable",
    srcs = [
        "conditional_thunk.cc",
        "convolution_thunk.cc",
        "copy_thunk.cc",
        "for_thunk.cc",
        "fused_mha_thunk.cc",
        "gpu_executable.cc",
        "infeed_thunk.cc",
        "kernel_thunk.cc",
        "memset_thunk.cc",
        "outfeed_thunk.cc",
        "replica_id_thunk.cc",
        "sequential_thunk.cc",
        "while_thunk.cc",
    ],
    hdrs = [
        "conditional_thunk.h",
        "convolution_thunk.h",
        "copy_thunk.h",
        "custom_call_thunk.h",
        "for_thunk.h",
        "fused_mha_thunk.h",
        "gemm_thunk.h",
        "gpu_executable.h",
        "infeed_thunk.h",
        "kernel_thunk.h",
        "memset_thunk.h",
        "outfeed_thunk.h",
        "replica_id_thunk.h",
        "sequential_thunk.h",
        "while_thunk.h",
    ],
    deps = [
        ":ccl_collective_thunks",
        ":cholesky_thunk",
        ":custom_call_thunk",
        ":fft_thunk",
        ":gemm_thunk",
        ":gpu_conv_runner",
        ":gpu_fused_mha_runner",
        ":scratch_allocator",
        ":triangular_solve_thunk",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/cleanup",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/types:span",
        "@com_google_absl//absl/types:variant",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:IR",
        "@llvm-project//mlir:Parser",
        "@llvm-project//mlir:Support",
        "@tsl//tsl/lib/gtl:map_util",
        "@tsl//tsl/platform:casts",
        "@tsl//tsl/platform:errors",
        "@tsl//tsl/platform:logging",
        "@tsl//tsl/platform:status",
        "@tsl//tsl/profiler/lib:scoped_annotation",
        "@tsl//tsl/profiler/lib:traceme",
        "@xla//xla:array2d",
        "@xla//xla:literal",
        "@xla//xla:refcounting_hash_map",
        "@xla//xla:shape_tree",
        "@xla//xla:shape_util",
        "@xla//xla:status",
        "@xla//xla:status_macros",
        "@xla//xla:statusor",
        "@xla//xla:types",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/mlir_hlo:lhlo_gpu",
        "@xla//xla/service:buffer_assignment",
        "@xla//xla/service:custom_call_status_internal",
        "@xla//xla/service:executable",
        "@xla//xla/service:hlo_dataflow_analysis",
        "@xla//xla/service:hlo_execution_profile",
        "@xla//xla/service:hlo_parser",
        "@xla//xla/service:logical_buffer",
        "@xla//xla/service:shaped_buffer",
        "@xla//xla/service:transfer_manager",
        "@xla//xla/service:xla_debug_info_manager",
        "@xla//xla/service/gpu:backend_configs_cc",
        "@xla//xla/service/gpu:buffer_allocations",
        "@xla//xla/service/gpu:gpu_asm_opts_util",
        "@xla//xla/service/gpu:gpu_constants",
        "@xla//xla/service/gpu:gpu_executable_run_options",
        "@xla//xla/service/gpu:gpu_types",
        "@xla//xla/service/gpu:io_feed_manager",
        "@xla//xla/service/gpu:ir_emission_utils",
        "@xla//xla/service/gpu:launch_dimensions",
        "@xla//xla/service/gpu:non_atomically_upgradeable_rw_lock",
        "@xla//xla/service/gpu:stream_executor_util",
        "@xla//xla/service/gpu:thunk",
        "@xla//xla/service/llvm_ir:buffer_assignment_util",
        "@xla//xla/stream_executor",
        "@xla//xla/stream_executor:blas",
        "@xla//xla/stream_executor:device_memory",
        "@xla//xla/stream_executor:device_memory_allocator",
        "@xla//xla/stream_executor:kernel",
        "@xla//xla/stream_executor/gpu:asm_compiler",
        "@xla//xla/stream_executor/gpu:gpu_asm_opts",
        "@xla//xla/stream_executor/gpu:gpu_stream",
        "@xla//xla/stream_executor/gpu:gpu_types_header",
    ],
)

cc_library(
    name = "gpu_conv_runner",
    srcs = ["gpu_conv_runner.cc"],
    hdrs = ["gpu_conv_runner.h"],
    deps = [
        "//xla/service:onednn_util",
        "@com_google_absl//absl/strings",
        "@tsl//tsl/framework:numeric_types",
        "@xla//xla:shape_util",
        "@xla//xla:status",
        "@xla//xla:status_macros",
        "@xla//xla:statusor",
        "@xla//xla:types",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service/gpu:backend_configs_cc",
        "@xla//xla/service/gpu:cublas_cudnn",
        "@xla//xla/service/gpu:stream_executor_util",
        "@xla//xla/service/gpu:thunk",
        "@xla//xla/stream_executor",
    ],
)

cc_library(
    name = "scratch_allocator",
    srcs = ["scratch_allocator.cc"],
    hdrs = ["scratch_allocator.h"],
    deps = [
        "@xla//xla/stream_executor:scratch_allocator",
    ],
)

cc_library(
    name = "mkl",
    srcs = ["mkl.cc"],
    hdrs = ["mkl.h"],
    deps = [
        "@tsl//tsl/framework:numeric_types",
        "@tsl//tsl/platform:logging",
    ],
)

cc_library(
    name = "gemm_rewriter",
    srcs = ["gemm_rewriter.cc"],
    hdrs = ["gemm_rewriter.h"],
    deps = [
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/strings",
        "@tsl//tsl/platform:errors",
        "@tsl//tsl/platform:statusor",
        "@tsl//tsl/protobuf:dnn_proto_cc",
        "@xla//xla:literal_comparison",
        "@xla//xla:status_macros",
        "@xla//xla:statusor",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/evaluator:hlo_evaluator",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service:hlo_creation_utils",
        "@xla//xla/service:hlo_pass",
        "@xla//xla/service:pattern_matcher",
        "@xla//xla/service/gpu:backend_configs_cc",
        "@xla//xla/service/gpu:cublas_cudnn",
        "@xla//xla/service/gpu:ir_emission_utils",
        "@xla//xla/service/gpu:matmul_utils",
        "@xla//xla/stream_executor:blas",
    ],
)

cc_library(
    name = "fused_mha_rewriter",
    srcs = ["fused_mha_rewriter.cc"],
    hdrs = ["fused_mha_rewriter.h"],
    deps = [
        "@tsl//tsl/platform:errors",
        "@tsl//tsl/platform:statusor",
        "@xla//xla:comparison_util",
        "@xla//xla:literal_util",
        "@xla//xla:permutation_util",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service:hlo_creation_utils",
        "@xla//xla/service:hlo_pass",
        "@xla//xla/service:pattern_matcher",
        "@xla//xla/service/gpu:backend_configs_cc",
        "@xla//xla/service/gpu:cublas_cudnn",
        "@xla//xla/service/gpu:ir_emission_utils",
        "@xla//xla/service/gpu:matmul_utils",
        "@xla//xla/stream_executor:dnn_proto_cc",
    ],
)

xetla_library(
    name = "gpu_fused_mha_runner",
    srcs = ["gpu_fused_mha_runner.cc"],
    hdrs = ["gpu_fused_mha_runner.h"],
    deps = [
        "//xla/service/gpu/xetla/sdp:sdp_kernel",
        "//xla/stream_executor/sycl:sycl_executor",
        "@com_google_absl//absl/strings",
        "@xla//xla:shape_util",
        "@xla//xla:status",
        "@xla//xla:status_macros",
        "@xla//xla:statusor",
        "@xla//xla:types",
        "@xla//xla:util",
        "@xla//xla:xla_data_proto_cc",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service/gpu:backend_configs_cc",
        "@xla//xla/service/gpu:cublas_cudnn",
        "@xla//xla/service/gpu:stream_executor_util",
        "@xla//xla/stream_executor",
        "@xla//xla/stream_executor:dnn",
        "@xla//xla/stream_executor:lazy_op_runner",
    ],
)

cc_library(
    name = "dot_expand_dims",
    srcs = ["dot_expand_dims.cc"],
    hdrs = ["dot_expand_dims.h"],
    deps = [
        "@tsl//tsl/platform:errors",
        "@tsl//tsl/platform:statusor",
        "@xla//xla:comparison_util",
        "@xla//xla:literal_util",
        "@xla//xla:permutation_util",
        "@xla//xla/hlo/ir:hlo",
        "@xla//xla/service:hlo_creation_utils",
        "@xla//xla/service:hlo_pass",
        "@xla//xla/service:pattern_matcher",
        "@xla//xla/service/gpu:ir_emission_utils",
        "@xla//xla/service/gpu:matmul_utils",
    ],
)
